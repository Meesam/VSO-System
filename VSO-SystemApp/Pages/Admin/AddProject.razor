@page "/addproject"
@page "/addproject/{id:int}"
@inject NavigationManager NavigationManager
@inject IProject IProjectService
@inject ToastService toastService

<Breadcrumb CurrentRoute="@NavigationManager.Uri.Substring(NavigationManager.BaseUri.Length - 1).ToString().Replace("/", "").ToLower()" />

<EditForm Model="@project" OnValidSubmit="@SubmitForm">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="flex gap-2">
        <div class="bg-white rounded-lg shadow-md p-4 md:w-1/2">
            <div class="flex flex-col space-y-4">
                <div class="flex flex-col">
                    <label for="name" class="text-sm text-gray-500">Name</label>
                    <InputText id="name" @bind-Value="project.Name" class="w-full border focus:outline-none p-1 px-2 rounded-md text-sm" />
                    <ValidationMessage class="text-xs text-red-500" For="@(() => project.Name)"></ValidationMessage>
                </div>
                <div class="flex flex-col">
                    <label for="type" class="text-sm text-gray-500 flex-1">Type</label>
                    <InputText id="type" @bind-Value="project.ProjectType" class="w-full border focus:outline-none p-1 px-2 rounded-md text-sm" />
                    <ValidationMessage class="text-xs text-red-500" For="@(() => project.ProjectType)"></ValidationMessage>
                </div>
                <div class="flex flex-col">
                    <label for="ProjectStartDate" class="text-sm text-gray-500 flex-1">Start Date</label>
                    <InputDate @bind-Value="project.ProjectStartDate" class="w-full border focus:outline-none p-1 px-2 rounded-md text-sm" />
                    <ValidationMessage class="text-xs text-red-500" For="@(() => project.ProjectStartDate)"></ValidationMessage>
                </div>
                <div class="flex flex-col">
                    <label for="ProjectEndDate" class="text-sm text-gray-500 flex-1">End Date</label>
                    <InputDate @bind-Value="project.ProjectEndDate" class="w-full border focus:outline-none p-1 px-2 rounded-md text-sm" />
                    <ValidationMessage class="text-xs text-red-500" For="@(() => project.ProjectEndDate)"></ValidationMessage>
                </div>
                <div class="flex flex-col">
                    <label for="Status" class="text-sm text-gray-500 flex-1">Status</label>
                    <InputText id="Status" @bind-Value="project.ProjectStatus" class="w-full border focus:outline-none p-1 px-2 rounded-md text-sm" />
                    <ValidationMessage class="text-xs text-red-500" For="@(() => project.ProjectStatus)"></ValidationMessage>
                </div>
                <div class="flex flex-col">
                    <label for="name" class="text-sm text-gray-500 flex-1">Desc.</label>
                    
                    <InputTextArea id="Description" @bind-Value="project.Description" class="w-full border focus:outline-none p-1 px-2 rounded-md text-sm" />
                    <ValidationMessage class="text-xs text-red-500" For="@(() => project.Description)"></ValidationMessage>
                </div>
                <div class="text-right">
                    <a href="/projects" class="p-[0.6rem] bg-gray-400 text-white text-sm rounded-md hover:bg-gray-500">Cancel</a>
                    <button type="submit" class="p-2 bg-sky-700 text-white text-sm rounded-md hover:bg-sky-600">@ButtonText</button>
                </div>
            </div>
        </div>
    </div>

</EditForm>


@code {
    private Project? project { get; set; }
    private string ButtonText { get; set; } = "Submit";

    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        if (Id <= 0)
        {
            project = new();
            ButtonText = "Submit";
        }
        else
        {
            project = IProjectService.GetProjectById(Id);
            ButtonText = "Update";
        }
    }

    private void SubmitForm()
    {
        if (project != null)
        {
            if (Id <= 0)
            {
                IProjectService.AddProject(project);
                project = new();
                toastService.ShowToast("Project added successfully", ToastLevel.Success);
                NavigationManager.NavigateTo("/projects");
            }
            else
            {
                IProjectService.UpdateProject(project);
                toastService.ShowToast("Project updated successfully", ToastLevel.Success);
                NavigationManager.NavigateTo("/projects");
            }

        }
    }
}

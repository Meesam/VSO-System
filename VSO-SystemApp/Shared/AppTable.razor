@inject WeatherForecastService ForecastService

@if (forecasts == null || Columns == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="w-full bg-white rounded-md border-b border-gray-200 shadow-lg">
        <thead class="bg-white border-b-2 border-gray-200 rounded-lg">
            <tr>
                @if(Columns != null)
                {
                    @foreach (var column in Columns)
                    {
                        <th class="p-3 text-sm font-normal text-gray-500 tracking-wide text-left">@column.Title</th>
                    }
                }
                
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr class="bg-white hover:bg-gray-50 cursor-pointer">
                    <td class="p-3 text-sm text-gray-700">@forecast.Date.ToShortDateString()</td>
                    <td class="p-3 text-sm text-gray-700">@forecast.TemperatureC</td>
                    <td class="p-3 text-sm text-gray-700">@forecast.TemperatureF</td>
                    <td class="p-3 text-sm text-gray-700">@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    [Parameter]
    public List<TableColumnSetting>? Columns { get; set; }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }
}
